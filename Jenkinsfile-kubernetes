pipeline {
  agent {
    kubernetes {
      yaml '''
apiVersion: v1
kind: Pod
spec:
  containers:
  - name: maven
    image: maven:3-openjdk-11
    command:
    - sleep
    args:
    - infinity
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    command:
    - sleep
    args:
    - infinity
    volumeMounts:
    - name: registry-credentials
      mountPath: /kaniko/.docker
  volumes:
  - name: registry-credentials
    secret:
      secretName: regcred
      items:
      - key: .dockerconfigjson
        path: config.json
'''
    }
  }
  stages {
    stage('Checkout') {
      steps {
        container('maven') {
          git branch: 'main', url: 'https://github.com/yomojomoro/source-maven-java-spring-hello-webapp.git'
        }
      }
    }
    stage('Build') {
      steps {
        container('maven') {
          sh 'mvn clean package -DskipTests=true'
        }
      }
    }
    stage('Test') {
      steps {
        container('maven') {
          sh 'mvn test'
        }
      }
    }
    stage('Build & Tag & Push Docker Image') {
      steps {
        container('kaniko') {
          sh 'executor --context=dir://$WORKSPACE --destination=dlfrur17/kaniko:$BUILD_NUMBER --destination=dlfrur17/kaniko:latest'
        }
      }
    }
    stage('Update K8s Manifests & Push') {
      environment {
        githubUser = 'kmy' //Ryan Jang
        githubEmail = 'dlfrur17@naver.com' //c1t1d0s7@example.com
        githubId = 'yomojomoro' //c1t1d0s7 
        githubRepo = 'jenkins-k8s-argo' //jenkins-kube-deploy
        githubURL = "https://github.com/${githubId}/${githubRepo}.git"
        dockerhubId = 'dlfrur17' //c1t1d0s7
        dockerhubRepo = 'kaniko' //hello-world
      }
      steps {
        container('git') {
          git branch: 'main', credentialsId: 'github-credential', url: "${githubURL}"
          sh "git config --global --add safe.directory ${workspace}"
          sh "git config --global user.name ${githubUser}"
          sh "git config --global user.email ${githubEmail}"
          sh 'sed -i "s/image:.*/image: ${dockerhubId}\\/${dockerhubRepo}:${BUILD_NUMBER}/g" deployment.yaml'
          sh 'git add deployment.yaml'
          sh 'git commit -m "Jenkins Build Number - ${BUILD_NUMBER}"'
          withCredentials([gitUsernamePassword(credentialsId: 'github-credential', gitToolName: 'Default')]) {
            sh 'git push --set-upstream origin main'
          }
        }
      }
    }
  }
}
